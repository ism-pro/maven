<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui">


    <ui:composition template="/tmpl/MainWindow.xhtml">

        <ui:define name="body">
            <h1><h:outputText value="#{ism.NonConformiteRequestTitleList}" /></h1>
            <hr />

            <h:form id="NonConformiteRequestListForm">
                <p:contextMenu for="datalist">
                    <p:menuitem id="menuitemSMQNCOpen" 
                                styleClass="menuitemSMQNCOpenClass" 
                                icon="ui-icon-smq-ncOpen" 
                                value="Ouvrir"
                                action="View.xhtml?faces-redirect=true" />
                    <p:separator />
                </p:contextMenu>

                <p:dataTable id="datalist" 
                             value="#{nonConformiteRequestController.items}" 
                             var="item"
                             
                             filteredValue="#{filterNCRequestView.nonConformiteRequestFiltered}"
                             
                             
                             widgetVar="_ncRequsetTable"
                             rowIndexVar="_CurrentRow"
                             
                             selection="#{nonConformiteRequestController.selected}"
                             rowKey="#{item.ncrId}" 
                             
                             first="#{tableView.first}"
                             rows="#{tableView.rows}" 
                             
                             paginator="#{tableView.paginator}"
                             paginatorTemplate="#{tableView.paginatorTemplate}"
                             rowsPerPageTemplate="#{tableView.rowsPerPageTemplate}"
                             rowsPerPageLabel="#{tableView.rowsPerPageLabel}"
                             currentPageReportTemplate="#{tableView.currentPageReportTemplate}"
                             pageLinks="#{tableView.pageLinks}"
                             paginatorPosition="#{tableView.paginatorPosition}"
                             paginatorAlwaysVisible="#{tableView.paginatorAlwaysVisible}"
                             
                             selectionMode="#{tableView.selectionMode}" 
                             emptyMessage="#{tableView.emptyMessage}"
                             resizableColumns="#{tableView.resizableColumns}"
                             
                             
                             >

                    <p:ajax event="rowSelect"   update="editButton validateButton actionButton clotureButton refuseButton deleteButton manageStateButton" />
                    <p:ajax event="rowUnselect" update="editButton validateButton actionButton clotureButton refuseButton deleteButton manageStateButton" />
                    <p:ajax event="rowDblselect" listener="#{nonConformiteRequestController.onDBClickRow()}" />
                    
                    <f:facet name="header">
                        #{ism.NonConformiteTitleList}
                        <p:commandButton id="toggler" type="button"
                                         value="Colonne" style="float:right" 
                                         icon="ui-icon-calculator" />
                        <p:columnToggler datasource="datalist" trigger="toggler" />
                    </f:facet>

                    
                    
                    <p:column headerText="#{ism.NonConformiteRequestField_ncrId}"
                              sortBy="#{item.ncrId}"
                              style="width: 22px; height: 12px;  text-align: right;">
                        <h:outputText value="#{item.ncrId}"/>
                    </p:column>

                    
                    
                    <p:column headerText="#{ism.NonConformiteRequestField_ncrTitle}"
                              sortBy="#{item.ncrTitle}"
                              style="width: 200px; height: 12px;">
                        <h:outputText value="#{item.ncrTitle}"/>
                    </p:column>


                    
                    <p:column headerText="#{ism.NonConformiteRequestField_ncrProcessus}"
                              sortBy="#{item.ncrProcessus.PProcessus} - #{item.ncrProcessus.PDesignation}"
                              filterBy="#{item.ncrProcessus}"
                              >
                        <f:facet name="filter">
                            <p:selectOneMenu onchange="PF('_ncRequsetTable').filter()"  >
                                <f:selectItem itemLabel="Select One" 
                                              itemValue="#{null}" noSelectionOption="true" />
                                <f:selectItems value="#{filterNCRequestView.processus}" 
                                               var="vProcessus"
                                               itemLabel="#{vProcessus.PProcessus} - #{vProcessus.PDesignation}"
                                               itemValue="#{vProcessus}"
                                               />
                            </p:selectOneMenu>
                        </f:facet>

                        <h:outputText value="#{item.ncrProcessus.PProcessus} - #{item.ncrProcessus.PDesignation}"/>
                    </p:column>

                    
                    
                    <p:column headerText="#{ism.NonConformiteRequestField_ncrState}"
                              sortBy="#{item.ncrState.istate} - #{item.ncrState.statename}"
                              filterBy="#{item.ncrState}">
                        <f:facet name="filter">
                            <p:selectOneMenu onchange="PF('_ncRequsetTable').filter()" >
                                <f:selectItem itemLabel="Select One" 
                                              itemValue="#{null}" noSelectionOption="true" />
                                <f:selectItems value="#{filterNCRequestView.ismNcrstate}" 
                                               var="vState"
                                               itemLabel="#{vState.istate} - #{vState.statename}"
                                               itemValue="#{vState}"
                                               />
                            </p:selectOneMenu>
                        </f:facet>
                        <h:outputText value="#{item.ncrState.statename}"
                                      style="#{item.ncrState.istate=='B'? 'color:pink;' : item.ncrState.istate=='C'? 'color:orange;': item.ncrState.istate=='D'? 'color:green;' : item.ncrState.istate=='E'? 'color:red;':''}"
                                      />
                    </p:column>

                    
                    
                    <p:column headerText="#{ism.NonConformiteRequestField_ncrNature}"
                              sortBy="#{item.ncrNature.ncnNature} - #{item.ncrNature.ncnDesignation}">
                        <h:outputText value="#{item.ncrNature.ncnDesignation}"/>
                    </p:column>

                    
                    
                    <p:column headerText="#{ism.NonConformiteRequestField_ncrGravity}"
                              sortBy="#{item.ncrGravity.ncgGravity} - #{item.ncrGravity.ncgDesignation}">
                        <h:outputText value="#{item.ncrGravity.ncgDesignation}"/>
                    </p:column>

                    
                    
                    <p:column headerText="#{ism.NonConformiteRequestField_ncrFrequency}"
                              sortBy="#{item.ncrFrequency.ncfFrequency} - #{item.ncrFrequency.ncfDesignation}">
                        <h:outputText value="#{item.ncrFrequency.ncfDesignation}"/>
                    </p:column>


                    
                    <p:column headerText="#{ism.NonConformiteRequestField_ncrOccured}"
                              sortBy="#{item.ncrOccured}"
                              style="width: 52px; height: 12px;">
                        <h:outputText value="#{item.ncrOccured}">
                            <f:convertDateTime pattern="dd/MM/yyyy" />
                        </h:outputText>
                    </p:column>

                    
                    
                    <p:column headerText="#{ism.NonConformiteRequestField_ncrEnddingAction}"
                              sortBy="#{item.ncrenddingAction}"
                              style="width: 52px; height: 12px;#{(item.ncrenddingAction eq null) ? '': ((tem.ncrState.istate eq 'F') and (item.ncrenddingAction lt item.ncrChanged)) ? 'background-color: greenyellow;':  ((tem.ncrState.istate eq 'F') and (item.ncrenddingAction gt item.ncrChanged)) ? 'background-color: darkolivegreen;':  (item.ncrenddingAction gt nonConformiteRequestController.now()) ? 'background-color:green;': (item.ncrenddingAction le nonConformiteRequestController.now()) ? 'background-color:red;': ''}">
                        <h:outputText value="#{item.ncrenddingAction}">
                            <f:convertDateTime pattern="dd/MM/yyyy" />
                        </h:outputText>
                    </p:column>


                    
                    <f:facet name="footer">
                        <p:commandButton id="createButton"      icon="ui-icon-plus"   value="#{ism.Create}" 
                                         actionListener="#{nonConformiteRequestController.prepareCreate}" 
                                         oncomplete="PF('NonConformiteRequestCreateDialog').show()"
                                         update=":NonConformiteRequestCreateForm" 
                                         />
                        <p:commandButton id="editButton"        icon="ui-icon-pencil" value="#{ism.Edit}"       
                                         update=":NonConformiteRequestEditForm" 
                                         oncomplete="PF('NonConformiteRequestEditDialog').show()" 
                                         disabled="#{(empty nonConformiteRequestController.selected) or (nonConformiteRequestController.selected.ncrState.id!=1) ? true : false}"/>
                        <p:commandButton id="validateButton"    icon="ui-icon-circle-check" value="#{ism.Validate}"   
                                         actionListener="#{nonConformiteRequestController.prepareValidate}" 
                                         update=":NonConformiteRequestValidateForm" 
                                         oncomplete="PF('NonConformiteRequestValidateDialog').show()" 
                                         disabled="#{(empty nonConformiteRequestController.selected) or (nonConformiteRequestController.selected.ncrState.id!=1) ? true : false}"
                                         rendered="#{request.isUserInRole('CO_SMQNCVALIDATE_W')}"/>

                        <p:commandButton id="actionButton"      icon="ui-icon-note" value="#{ism.Action}"    
                                         update=":NonConformiteRequestActionForm" 
                                         oncomplete="PF('NonConformiteRequestActionDialog').show()" 
                                         disabled="#{(empty nonConformiteRequestController.selected) or (nonConformiteRequestController.selected.ncrState.id!=3) ? true : false}"/>

                        <p:commandButton id="clotureButton"      icon="ui-icon-locked" value="#{ism.Cloture}"    
                                         actionListener="#{nonConformiteRequestController.cloture}" update=":growl,datalist" 
                                         disabled="#{(empty nonConformiteRequestController.selected) or 
                                                     (nonConformiteRequestController.selected.ncrState.id==2) or 
                                                     (nonConformiteRequestController.selected.ncrState.id==3) or
                                                     (nonConformiteRequestController.selected.ncrState.id==6) or
                                                     (nonConformiteRequestController.selected.ncrState.id==7) ? true : false}"
                                         rendered="#{request.isUserInRole('CO_SMQNCCLOTURE_W')}"/>

                        <p:commandButton id="refuseButton"      icon="ui-icon-closethick" value="#{ism.Refused}"    
                                         update=":NonConformiteRequestRefusedForm" 
                                         oncomplete="PF('NonConformiteRequestRefusedDialog').show()" 
                                         disabled="#{(empty nonConformiteRequestController.selected) or (nonConformiteRequestController.selected.ncrState.id!=1) ? true : false}"
                                         rendered="#{request.isUserInRole('CO_SMQNCREFUSE_W')}" />

                        <p:commandButton id="deleteButton"      icon="ui-icon-trash"  value="#{ism.Delete}" actionListener="#{nonConformiteRequestController.destroy}" update=":growl,datalist" 
                                         disabled="#{(empty nonConformiteRequestController.selected) or (nonConformiteRequestController.selected.ncrState.id!=1) ? true : false}"
                                         rendered="#{request.isUserInRole('CO_SMQNCREQUEST_W')}">
                            <p:confirm header="#{ism.NonConformiteRequestTitleList} - #{ism.ConfirmDeleteTitle}" 
                                       message="#{ism.ConfirmDeleteMessage}" 
                                       icon="ui-icon-alert"/>

                        </p:commandButton>

                        <p:commandButton id="manageStateButton"      icon="ui-icon-note" value="#{ism.NonConformiteField_ncState}"    
                                         update=":NonConformiteRequestManageStateForm" 
                                         oncomplete="PF('NonConformiteRequestManageStateDialog').show()" 
                                         rendered="#{request.isUserInRole('CO_SMQNCMANAGESTATE_W')}"/>


                    </f:facet>

                </p:dataTable>

            </h:form>


            <p:panel header="Code couleur">
                <p:panelGrid columns="2">

                    <p:panelGrid >
                        <p:row>
                            <p:column colspan="2" style="background-color: dodgerblue;">
                                <h:outputText value="Couleur d'état" style="color: white;  text-align: center;"/></p:column>
                        </p:row>
                        <p:row>
                            <p:column style="background-color:#000;"><h:outputText value="A-F" style="color: white"/></p:column>
                            <p:column ><h:outputText value="Créée ou Terminée" /></p:column>
                        </p:row>
                        <p:row>
                            <p:column style="background-color: pink;"><h:outputText value="B" style="color: white"/></p:column>
                            <p:column ><h:outputText value="En cours de validation" /></p:column>
                        </p:row>
                        <p:row>
                            <p:column style="background-color: lightsalmon;"><h:outputText value="C" style="color: white"/></p:column>
                            <p:column ><h:outputText value="En attente de solution" /></p:column>
                        </p:row>
                        <p:row>
                            <p:column style="background-color: green;"><h:outputText value="D" style="color: white"/></p:column>
                            <p:column ><h:outputText value="En cours" /></p:column>
                        </p:row>
                        <p:row>
                            <p:column style="background-color: red;"><h:outputText value="E" style="color: white"/></p:column>
                            <p:column ><h:outputText value="Annulée" /></p:column>
                        </p:row>
                    </p:panelGrid>

                    <p:panelGrid >
                        <p:row >
                            <p:column colspan="2" style="background-color: dodgerblue;">
                                <h:outputText value="Couleur de résolution" style="color: white;  text-align: center;"/></p:column>
                        </p:row>
                        <p:row>
                            <p:column ><h:outputText value="A" /></p:column>
                            <p:column ><h:outputText value="Pas d'action" /></p:column>
                        </p:row>
                        <p:row>
                            <p:column style="background-color: green;"><h:outputText value="B" style="color: white"/></p:column>
                            <p:column ><h:outputText value="Période d'action en cours" /></p:column>
                        </p:row>
                        <p:row>
                            <p:column style="background-color: greenyellow;"><h:outputText value="C" style="color: white"/></p:column>
                            <p:column ><h:outputText value="Action terminée à échéance" /></p:column>
                        </p:row>
                        <p:row>
                            <p:column style="background-color: darkolivegreen;"><h:outputText value="D" style="color: white"/></p:column>
                            <p:column ><h:outputText value="Action terminée après échéance" /></p:column>
                        </p:row>
                        <p:row>
                            <p:column style="background-color: red;"><h:outputText value="E" style="color: white"/></p:column>
                            <p:column ><h:outputText value="Action en retard" /></p:column>
                        </p:row>
                    </p:panelGrid>

                </p:panelGrid>
            </p:panel>

            <ui:include src="Create.xhtml"/>
            <ui:include src="Edit.xhtml"/>
            <ui:include src="Validate.xhtml"/>
            <ui:include src="Action.xhtml"/>
            <ui:include src="Refuse.xhtml"/>
            <ui:include src="MangeState.xhtml"/>
        </ui:define>
    </ui:composition>

</html>
