
================================================================================
PROPOSITION D'AMELIORATION
================================================================================
Proposition dans les préférences utilisateurs :
    - Ajouter le nombre d'éléments de résultat par table par défaut. (row)

A Faire :

2 - UTILISATEUR :
    2.3. Ajouter les options de programme comme :
        
        - Les paramètres d'options de résultat
        Options de l'utilisateur connecter
    + Fournir la possibilité de mettre une image,
    + Ajouter au staff les informations suivantes :
        + Rue / code postal / ville
        + Email / Phone / Info
        
3 - Non conformités :
    + Effectuer un chargement partiel,
    + Effectuer la sauvegarde du choix de paramètre de sélection de processus
    + Réaliser un diagramme de planning en jalon pour les non-conformités entre date prévu et date résolution,
    + Fournir la possibilité d’ajouter une image.
    + Lors de la saisie des actions ajouter la possibilité d’indiquer les causes possibles par ordre croissant de probabilité,
    + possibilité d'avoir un état d'impression
        




Configuration :
    + RUBAN :
    ++ Gestion des accès utilisateurs

    + GENERALITES :
    ++ Possibilité de configurer la fenêtre de confirmation globale voir bas de la page main 
      Notemment les effets à l'ouverture ...
    
    + CRUD :
    ++ Enregistrer les options de viewTab entre les sessions.

    + PROCESSUS :
    ++ Ajouter une page de recherche + result + exportation

    + DOC EXPLORER :
    + Permettre d'avoir un classement en fonction d'une catégorie et un groupe 
    surtout pour les processus volumineux.


    + TODO SHORTCUT
    ++ Gestion des shortcut et toggler.

    + TODO RESOURCES
    ++ 
    ++ staffGroupDef : gestion crud de la définition des groupes utilisateur
    ++ staffRôleList : gestion crud de la définition des groupes utilisateur
    ++ staffRoleTree : Revoir la méthodologie de définition des droits d'accès sous forme de tableau
    ++ staffCompany : gestion crud de l'association des utilisateurs à une société.
    ++ Accès : gestion crud des accès utilisateur sous forme de tableau
    ++ Gestion de la création de staff
    ++ Présentation des staffs.
    


     COMMIT
================================================================================
# GENERALITES :
================================================================================
# POM :
* Ajout des libs suivantes :
** Feedreader
** Fileupload
** Primefaces Push
** Barcode

# SECURITY :
* Managing access :
** Suppression de la sécurité USER fournissant accès à /faces/public/*
** Activation du paramètre "Mise en correspondance par défaut des principaux avec des rôles" dans Configurations/serv-config/Securité.
    Ceci permet d'éviter la duplication des rôle dans glassfish-web.
** Nouvelle gestion des droits et sécurité : 
   + Création d'un groupe GOUROU - Master access
   + Création/Vérification existance du groupe ADMIN - Administrateur
   + Suppression des liaisons groupe et rôle existant
   + Suppression des anciens rôle
   + Ajout des nouveaux rôle
   + Création des liaisons groupe et rôle par défaut (GOUROU, ADMIN)





================================================================================
# SPECIFIQUE
================================================================================
# Onglet ressources :
* Modififier le texte de l'onglet resources en resSources
* Adaptation standard du CRUD pour la gestion des groupes d'accès
* Réalisation du nouveau système d'abre de sélection des accès par checknode
* Suppression de l'accès create by pickList
* Ajout de bouton dans le menu de gauche pour permettre d'accéder facilement en
  Mode Liste d'accès ou arbre
* Adaptation standard du CRUD pour la gestion des lien rôle au groupe

# Interface Login / Error / Logout
* Changement de l'interface et intégration de w3.css



********************************************************************************
ETAPE DE GESTION DES CONTROLLEUR JSF
********************************************************************************
Test après changement :
    + Modifier les entités : ajouter une fonction du type getItemByLast
    + Modifier la EJB en ajoutant 3 fonctions de clé et désignation
      Pour les
    + Modifier les propriétés de message
    + Modifier le contrôler en utilisant bien le bean
    + Modifier le viewTabManager 
        - Créer les paramètre (controleur, list pour tri, list pour filtre)
        - Initialiser le context et affecter la liste de tri avec getItemsByLastChange
        - Créer les getter et setter (List tri, liste filtre)
        - Créer une ligne dans handleTableChanges pour récupéer la dernière list
        - Créer une ligne dans handleDestroy pour mettre à jour après suppression de ligne
    + Modifier List - View - Create - Edit



********************************************************************************
ETAPE DE GESTION D'ACCES
********************************************************************************
1 - Ouvrir le fichier access.xlsx pour ajouté un nouvelle accès en respectant la 
nommenclature.
2 - Modifier le fichier web.xml en y ajoutant
    - les security-constraint,
    - les rôle d'accès
3 - Ajouter au bundle security les infos d'accès
4 - Modifier le fichier CtrlAccessService de l'arbre d'application
5 - Ajouter ou retirer l'accès des rôles existant en database en veillant au liaison de groupe
6 - 




