null
        PrimeFaces.widget.Ribbon = PrimeFaces.widget.TabView.extend({init:function(a){this._super(a); this.panelContainer = this.jq.children(".ui-tabs-panels"); this.stateHolder = $(this.jqId + "_activeIndex"); this.cfg.selected = parseInt(this.stateHolder.val()); this.focusedTabHeader = null; this.cfg.tabindex = this.cfg.tabindex || "0"; if (this.cfg.scrollable){this.navscroller = this.jq.children(".ui-tabs-navscroller"); this.navcrollerLeft = this.navscroller.children(".ui-tabs-navscroller-btn-left"); this.navcrollerRight = this.navscroller.children(".ui-tabs-navscroller-btn-right"); this.navContainer = this.navscroller.children(".ui-tabs-nav"); this.firstTab = this.navContainer.children(":first-child"); this.lastTab = this.navContainer.children(":last-child"); this.scrollStateHolder = $(this.jqId + "_scrollState")} else{this.navContainer = this.jq.children(".ui-tabs-nav")}this.navContainerItems = this.navContainer.children("li"); for (var b = 0; b < this.navContainerItems.length; b++){if (this.cfg.selected === b && !this.navContainerItems.eq(b).hasClass("ui-state-disabled")){this.navContainerItems.eq(b).attr("tabindex", this.cfg.tabindex)} else{this.navContainerItems.eq(b).attr("tabindex", "-1")}}this.bindEvents(); if (this.cfg.dynamic && this.cfg.cache){this.markAsLoaded(this.panelContainer.children().eq(this.cfg.selected))}this.renderDeferred()}, renderDeferred:function(){if (this.jq.is(":visible")){this._render()} else{var a = this.jq.parent().closest(".ui-hidden-container"), b = this; if (a.length){this.addDeferredRender(this.id, a, function(){return b.render()})}}}, _render:function(){if (this.cfg.scrollable){this.initScrolling()}}, bindEvents:function(){var a = this; this.navContainer.children("li").on("mouseover.ribbon", function(c){var b = $(this); if (!b.hasClass("ui-state-disabled")){b.addClass("ui-state-hover")}}).on("mouseout.ribbon", function(c){var b = $(this); if (!b.hasClass("ui-state-disabled")){b.removeClass("ui-state-hover")}}).on("click.ribbon", function(d){var c = $(this); if ($(d.target).is(":not(.ui-icon-close)")){var b = c.index(); if (!c.hasClass("ui-state-disabled") && b !== a.cfg.selected){a.select(b); c.trigger("focus.ribbon")}}d.preventDefault()}); this.navContainer.find("li .ui-icon-close").on("click.ribbon", function(d){var b = $(this).parent().index(); if (a.cfg.onTabClose){var c = a.cfg.onTabClose.call(a, b); if (c !== false){a.remove(b)}} else{a.remove(b)}d.preventDefault()}); if (this.cfg.scrollable){this.navscroller.children(".ui-tabs-navscroller-btn").on("mouseover.ribbon", function(){var b = $(this); if (!b.hasClass("ui-state-disabled")){$(this).addClass("ui-state-hover")}}).on("mouseout.ribbon", function(){var b = $(this); if (!b.hasClass("ui-state-disabled")){$(this).removeClass("ui-state-hover ui-state-active")}}).on("mousedown.ribbon", function(){var b = $(this); if (!b.hasClass("ui-state-disabled")){$(this).removeClass("ui-state-hover").addClass("ui-state-active")}}).on("mouseup.ribbon", function(){var b = $(this); if (!b.hasClass("ui-state-disabled")){$(this).addClass("ui-state-hover").removeClass("ui-state-active")}}); this.navcrollerLeft.on("click.ribbon", function(b){a.scroll(100); b.preventDefault()}); this.navcrollerRight.on("click.ribbon", function(b){a.scroll( - 100); b.preventDefault()})}this.bindKeyEvents()}, bindKeyEvents:function(){var a = this; this.navContainer.children("li").on("focus.ribbon", function(){a.focusedTabHeader = $(this); if (!a.focusedTabHeader.hasClass("ui-state-disabled")){a.navContainer.children('li[tabindex="' + a.cfg.tabindex + '"]').attr("tabindex", "-1").removeClass("ui-tabs-outline"); a.focusedTabHeader.attr("tabindex", a.cfg.tabindex).addClass("ui-tabs-outline")}}).on("blur.ribbon", function(){if (a.focusedTabHeader){a.focusedTabHeader.removeClass("ui-tabs-outline")}}).on("keydown.ribbon", function(c){var b = $.ui.keyCode; switch (c.which){case b.LEFT:case b.UP:if (a.focusedTabHeader){if (a.cfg.scrollable && (a.focusedTabHeader.index() === 0)){break}if (a.focusedTabHeader.index() === 0){a.focusedTabHeader = a.navContainer.children("li:not(.ui-state-disabled):last")} else{a.focusedTabHeader = a.focusedTabHeader.prevAll("li:not(.ui-state-disabled):first"); if (!a.focusedTabHeader.length){a.focusedTabHeader = a.navContainer.children("li:not(.ui-state-disabled):last")}}a.focusedTabHeader.trigger("focus.ribbon"); if (a.cfg.scrollable){var d = a.focusedTabHeader.position().left < a.navcrollerLeft.position().left; if (d){a.navcrollerLeft.trigger("click.ribbon")}}}c.preventDefault(); clearTimeout(a.activating); a.activating = setTimeout(function(){a.focusedTabHeader.trigger("click")}, 500); break; case b.RIGHT:case b.DOWN:if (a.focusedTabHeader){if (a.cfg.scrollable && (a.focusedTabHeader.index() === (a.getLength() - 1))){break}if (a.focusedTabHeader.index() === (a.getLength() - 1)){a.focusedTabHeader = a.navContainer.children("li:not(.ui-state-disabled):first")} else{a.focusedTabHeader = a.focusedTabHeader.nextAll("li:not(.ui-state-disabled):first"); if (!a.focusedTabHeader.length){a.focusedTabHeader = a.navContainer.children("li:not(.ui-state-disabled):first")}}a.focusedTabHeader.trigger("focus.ribbon"); if (a.cfg.scrollable){var f = a.focusedTabHeader.position().left + a.focusedTabHeader.width() > a.navcrollerRight.position().left; if (f){a.navcrollerRight.trigger("click.ribbon")}}}c.preventDefault(); clearTimeout(a.activating); a.activating = setTimeout(function(){a.focusedTabHeader.trigger("click")}, 500); break}})}, initScrolling:function(){if (this.panelContainer.children().length){var a = ((this.lastTab.position().left + this.lastTab.width()) - this.firstTab.position().left) > this.navscroller.innerWidth(); if (a){this.navscroller.css("padding-left", "18px"); this.navcrollerLeft.show(); this.navcrollerRight.show(); this.restoreScrollState()}}}, scroll:function(c){if (this.navContainer.is(":animated")){return}var f = parseInt(this.navContainer.css("margin-left")), b = f + c, a = this.navscroller.innerWidth(), d = this; if (c < 0){var e = this.lastTab.position().left + parseInt(this.lastTab.innerWidth()); if (e > a){this.navContainer.animate({"margin-left":b + "px"}, "fast", "easeInOutCirc", function(){d.saveScrollState(b); if ((e + c) < a){d.disableScrollerButton(d.navcrollerRight)}if (d.navcrollerLeft.hasClass("ui-state-disabled")){d.enableScrollerButton(d.navcrollerLeft)}})}} else{if (b <= 0){this.navContainer.animate({"margin-left":b + "px"}, "fast", "easeInOutCirc", function(){d.saveScrollState(b); if (b === 0){d.disableScrollerButton(d.navcrollerLeft)}if (d.navcrollerRight.hasClass("ui-state-disabled")){d.enableScrollerButton(d.navcrollerRight)}})}}}, disableScrollerButton:function(a){a.addClass("ui-state-disabled").removeClass("ui-state-hover ui-state-active")}, enableScrollerButton:function(a){a.removeClass("ui-state-disabled")}, saveScrollState:function(a){this.scrollStateHolder.val(a)}, restoreScrollState:function(){var a = parseInt(this.scrollStateHolder.val()); if (a === 0){this.disableScrollerButton(this.navcrollerLeft)}this.navContainer.css("margin-left", this.scrollStateHolder.val() + "px")}, select:function(d, c){if (this.cfg.onTabChange && !c){var a = this.cfg.onTabChange.call(this, d); if (a === false){return false}}var b = this.panelContainer.children().eq(d), e = this.cfg.dynamic && !this.isLoaded(b); this.stateHolder.val(d); this.cfg.selected = d; if (e){this.loadDynamicTab(b)} else{this.show(b); if (this.hasBehavior("tabChange") && !c){this.fireTabChangeEvent(b)}}return true}, show:function(c){var f = this.navContainer.children(), e = f.filter(".ui-state-active"), b = f.eq(c.index()), d = this.panelContainer.children(".ui-tabs-panel:visible"), a = this; d.attr("aria-hidden", true); e.attr("aria-expanded", false); e.attr("aria-selected", false); c.attr("aria-hidden", false); b.attr("aria-expanded", true); b.attr("aria-selected", true); if (this.cfg.effect){d.hide(this.cfg.effect, null, this.cfg.effectDuration, function(){e.removeClass("ui-tabs-selected ui-state-active"); b.addClass("ui-tabs-selected ui-state-active"); c.show(a.cfg.effect, null, a.cfg.effectDuration, function(){a.postTabShow(c)})})} else{e.removeClass("ui-tabs-selected ui-state-active"); d.hide(); b.addClass("ui-tabs-selected ui-state-active"); c.show(); this.postTabShow(c)}}, loadDynamicTab:function(a){var d = this, c = a.index(), b = {source:this.id, process:this.id, update:this.id, params:[{name:this.id + "_contentLoad", value:true}, {name:this.id + "_newTab", value:a.attr("id")}, {name:this.id + "_tabindex", value:c}], onsuccess:function(h, f, g){PrimeFaces.ajax.Response.handle(h, f, g, {widget:d, handle:function(i){a.html(i); if (this.cfg.cache){this.markAsLoaded(a)}}}); return true}, oncomplete:function(){d.show(a)}}; if (this.hasBehavior("tabChange")){var e = this.cfg.behaviors.tabChange; e.call(this, b)} else{PrimeFaces.ajax.Request.handle(b)}}, remove:function(b){var e = this.navContainer.children().eq(b), a = this.panelContainer.children().eq(b); e.remove(); a.remove(); var d = this.getLength(); if (d > 0){if (b < this.cfg.selected){this.cfg.selected--} else{if (b === this.cfg.selected){var c = (this.cfg.selected === (d))?(this.cfg.selected - 1):this.cfg.selected; this.select(c, true)}}} else{this.cfg.selected = - 1}this.fireTabCloseEvent(a.attr("id"), b)}, getLength:function(){return this.navContainer.children().length}, getActiveIndex:function(){return this.cfg.selected}, fireTabChangeEvent:function(a){var c = this.cfg.behaviors.tabChange, b = {params:[{name:this.id + "_newTab", value:a.attr("id")}, {name:this.id + "_tabindex", value:a.index()}]}; c.call(this, b)}, fireTabCloseEvent:function(d, a){if (this.hasBehavior("tabClose")){var c = this.cfg.behaviors.tabClose, b = {params:[{name:this.id + "_closeTab", value:d}, {name:this.id + "_tabindex", value:a}]}; c.call(this, b)}}, hasBehavior:function(a){if (this.cfg.behaviors){return this.cfg.behaviors[a] !== undefined}return false}, markAsLoaded:function(a){a.data("loaded", true)}, isLoaded:function(a){return a.data("loaded") === true}, disable:function(a){this.navContainer.children().eq(a).addClass("ui-state-disabled")}, enable:function(a){this.navContainer.children().eq(a).removeClass("ui-state-disabled")}, postTabShow:function(a){if (this.cfg.onTabShow){this.cfg.onTabShow.call(this, a.index())}PrimeFaces.invokeDeferredRenders(this.id)}});