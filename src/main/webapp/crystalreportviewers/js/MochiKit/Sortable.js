if(typeof(dojo)!="undefined"){dojo.provide("MochiKit.DragAndDrop");dojo.require("MochiKit.Base");dojo.require("MochiKit.DOM");dojo.require("MochiKit.Iter")}if(typeof(JSAN)!="undefined"){JSAN.use("MochiKit.Base",[]);JSAN.use("MochiKit.DOM",[]);JSAN.use("MochiKit.Iter",[])}try{if(typeof(MochiKit.Base)=="undefined"||typeof(MochiKit.DOM)=="undefined"||typeof(MochiKit.Iter)=="undefined"){throw""}}catch(e){throw"MochiKit.DragAndDrop depends on MochiKit.Base, MochiKit.DOM and MochiKit.Iter!"}if(typeof(MochiKit.Sortable)=="undefined"){MochiKit.Sortable={}}MochiKit.Sortable.NAME="MochiKit.Sortable";MochiKit.Sortable.VERSION="1.4";MochiKit.Sortable.__repr__=function(){return"["+this.NAME+" "+this.VERSION+"]"};MochiKit.Sortable.toString=function(){return this.__repr__()};MochiKit.Sortable.EXPORT=["SortableObserver"];MochiKit.DragAndDrop.EXPORT_OK=["Sortable"];MochiKit.Sortable.SortableObserver=function(b,a){this.__init__(b,a)};MochiKit.Sortable.SortableObserver.prototype={__init__:function(b,a){this.element=MochiKit.DOM.getElement(b);this.observer=a;this.lastValue=MochiKit.Sortable.Sortable.serialize(this.element)},onStart:function(){this.lastValue=MochiKit.Sortable.Sortable.serialize(this.element)},onEnd:function(){MochiKit.Sortable.Sortable.unmark();if(this.lastValue!=MochiKit.Sortable.Sortable.serialize(this.element)){this.observer(this.element)}}};MochiKit.Sortable.Sortable={sortables:{},_findRootElement:function(a){while(a.tagName!="BODY"){if(a.id&&MochiKit.Sortable.Sortable.sortables[a.id]){return a}a=a.parentNode}},options:function(a){a=MochiKit.Sortable.Sortable._findRootElement(MochiKit.DOM.getElement(a));if(!a){return}return MochiKit.Sortable.Sortable.sortables[a.id]},destroy:function(c){var f=MochiKit.Sortable.Sortable.options(c);var a=MochiKit.Base;var g=MochiKit.DragAndDrop;if(f){g.Draggables.removeObserver(f.element);a.map(function(b){g.Droppables.remove(b)},f.droppables);a.map(function(b){b.destroy()},f.draggables);delete MochiKit.Sortable.Sortable.sortables[f.element.id]}},create:function(d,c){d=MochiKit.DOM.getElement(d);var b=MochiKit.Sortable.Sortable;c=MochiKit.Base.update({element:d,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[d],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},c);b.destroy(d);var a={revert:true,ghosting:c.ghosting,scroll:c.scroll,scrollSensitivity:c.scrollSensitivity,scrollSpeed:c.scrollSpeed,constraint:c.constraint,handle:c.handle};if(c.starteffect){a.starteffect=c.starteffect}if(c.reverteffect){a.reverteffect=c.reverteffect}else{if(c.ghosting){a.reverteffect=function(h){h.style.top=0;h.style.left=0}}}if(c.endeffect){a.endeffect=c.endeffect}if(c.zindex){a.zindex=c.zindex}var f={overlap:c.overlap,containment:c.containment,hoverclass:c.hoverclass,onhover:b.onHover,tree:c.tree,accept:c.accept};var g={onhover:b.onEmptyHover,overlap:c.overlap,containment:c.containment,hoverclass:c.hoverclass,accept:c.accept};MochiKit.DOM.removeEmptyTextNodes(d);c.draggables=[];c.droppables=[];if(c.dropOnEmpty||c.tree){new MochiKit.DragAndDrop.Droppable(d,g);c.droppables.push(d)}MochiKit.Base.map(function(i){var h=c.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,c.handle,i):i;c.draggables.push(new MochiKit.DragAndDrop.Draggable(i,MochiKit.Base.update(a,{handle:h})));new MochiKit.DragAndDrop.Droppable(i,f);if(c.tree){i.treeNode=d}c.droppables.push(i)},(b.findElements(d,c)||[]));if(c.tree){MochiKit.Base.map(function(h){new MochiKit.DragAndDrop.Droppable(h,g);h.treeNode=d;c.droppables.push(h)},(b.findTreeElements(d,c)||[]))}b.sortables[d.id]=c;MochiKit.DragAndDrop.Draggables.addObserver(new MochiKit.Sortable.SortableObserver(d,c.onUpdate))},findElements:function(b,a){return MochiKit.Sortable.Sortable.findChildren(b,a.only,a.tree?true:false,a.tag)},findTreeElements:function(b,a){return MochiKit.Sortable.Sortable.findChildren(b,a.only,a.tree?true:false,a.treeTag)},findChildren:function(d,b,a,c){if(!d.hasChildNodes()){return null}c=c.toUpperCase();if(b){b=MochiKit.Base.flattenArray([b])}var f=[];MochiKit.Base.map(function(h){if(h.tagName&&h.tagName.toUpperCase()==c&&(!b||MochiKit.Iter.some(b,function(i){return MochiKit.DOM.hasElementClass(h,i)}))){f.push(h)}if(a){var g=MochiKit.Sortable.Sortable.findChildren(h,b,a,c);if(g&&g.length>0){f=f.concat(g)}}},d.childNodes);return f},onHover:function(g,f,a){if(MochiKit.DOM.isParent(f,g)){return}var b=MochiKit.Sortable.Sortable;if(a>0.33&&a<0.66&&b.options(f).tree){return}else{if(a>0.5){b.mark(f,"before");if(f.previousSibling!=g){var c=g.parentNode;g.style.visibility="hidden";f.parentNode.insertBefore(g,f);if(f.parentNode!=c){b.options(c).onChange(g)}b.options(f.parentNode).onChange(g)}}else{b.mark(f,"after");var d=f.nextSibling||null;if(d!=g){var c=g.parentNode;g.style.visibility="hidden";f.parentNode.insertBefore(g,d);if(f.parentNode!=c){b.options(c).onChange(g)}b.options(f.parentNode).onChange(g)}}}},_offsetSize:function(a,b){if(b=="vertical"||b=="height"){return a.offsetHeight}else{return a.offsetWidth}},onEmptyHover:function(f,h,i){var k=f.parentNode;var j=MochiKit.Sortable.Sortable;var a=j.options(h);if(!MochiKit.DOM.isParent(h,f)){var g;var c=j.findElements(h,{tag:a.tag,only:a.only});var b=null;if(c){var d=j._offsetSize(h,a.overlap)*(1-i);for(g=0;g<c.length;g+=1){if(d-j._offsetSize(c[g],a.overlap)>=0){d-=j._offsetSize(c[g],a.overlap)}else{if(d-(j._offsetSize(c[g],a.overlap)/2)>=0){b=g+1<c.length?c[g+1]:null;break}else{b=c[g];break}}}}h.insertBefore(f,b);j.options(k).onChange(f);a.onChange(f)}},unmark:function(){var a=MochiKit.Sortable.Sortable._marker;if(a){MochiKit.Style.hideElement(a)}},mark:function(c,a){var g=MochiKit.DOM;var b=MochiKit.Sortable.Sortable;var h=b.options(c.parentNode);if(h&&!h.ghosting){return}if(!b._marker){b._marker=g.getElement("dropmarker")||document.createElement("DIV");MochiKit.Style.hideElement(b._marker);g.addElementClass(b._marker,"dropmarker");b._marker.style.position="absolute";document.getElementsByTagName("body").item(0).appendChild(b._marker)}var f=MochiKit.Position.cumulativeOffset(c);b._marker.style.left=f.x+"px";b._marker.style.top=f.y+"px";if(a=="after"){if(h.overlap=="horizontal"){b._marker.style.left=(f.x+c.clientWidth)+"px"}else{b._marker.style.top=(f.y+c.clientHeight)+"px"}}MochiKit.Style.showElement(b._marker)},_tree:function(g,c,h){var a=MochiKit.Sortable.Sortable;var f=a.findElements(g,c)||[];for(var d=0;d<f.length;++d){var b=f[d].id.match(c.format);if(!b){continue}var j={id:encodeURIComponent(b?b[1]:null),element:g,parent:h,children:[],position:h.children.length,container:a._findChildrenElement(f[d],c.treeTag.toUpperCase())};if(j.container){a._tree(j.container,c,j)}h.children.push(j)}return h},_findChildrenElement:function(c,a){if(c&&c.hasChildNodes){for(var b=0;b<c.childNodes.length;++b){if(c.childNodes[b].tagName==a){return c.childNodes[b]}}}return null},tree:function(d,b){d=MochiKit.DOM.getElement(d);var c=MochiKit.Sortable.Sortable.options(d);b=MochiKit.Base.update({tag:c.tag,treeTag:c.treeTag,only:c.only,name:d.id,format:c.format},b||{});var a={id:null,parent:null,children:new Array,container:d,position:0};return MochiKit.Sortable.Sortable._tree(d,b,a)},setSequence:function(f,g,d){var c=MochiKit.Sortable.Sortable;var a=MochiKit.Base;f=MochiKit.DOM.getElement(f);d=a.update(c.options(f),d||{});var h={};a.map(function(i){var b=i.id.match(d.format);if(b){h[b[1]]=[i,i.parentNode]}i.parentNode.removeChild(i)},c.findElements(f,d));a.map(function(b){var i=h[b];if(i){i[1].appendChild(i[0]);delete h[b]}},g)},_constructIndex:function(b){var a="";do{if(b.id){a="["+b.position+"]"+a}}while((b=b.parent)!=null);return a},sequence:function(c,b){c=MochiKit.DOM.getElement(c);var a=MochiKit.Sortable.Sortable;var b=MochiKit.Base.update(a.options(c),b||{});return MochiKit.Base.map(function(d){return d.id.match(b.format)?d.id.match(b.format)[1]:""},MochiKit.DOM.getElement(a.findElements(c,b)||[]))},serialize:function(d,c){d=MochiKit.DOM.getElement(d);var a=MochiKit.Sortable.Sortable;c=MochiKit.Base.update(a.options(d),c||{});var b=encodeURIComponent(c.name||d.id);if(c.tree){return MochiKit.Base.flattenArray(MochiKit.Base.map(function(f){return[b+a._constructIndex(f)+"[id]="+encodeURIComponent(f.id)].concat(f.children.map(arguments.callee))},a.tree(d,c).children)).join("&")}else{return MochiKit.Base.map(function(f){return b+"[]="+encodeURIComponent(f)},a.sequence(d,c)).join("&")}}};